

MVN:
1. /gubo/dev/mvn/apache-maven-3.3.3/conf/settings.xml
    <localRepository>D:/gubo/dev/mvn/gubo.local.repo</localRepository>


TO DEPLOY SLIPWIRE:
mvn install:install-file -Dfile=build/outputs/aar/slipwire-debug.aar -DgroupId=gubo.slipwire -DartifactId=slipwire -Dversion=1.0.0 -Dpackaging=aar

VOLLEY:
1. clone from https://android.googlesource.com/platform/frameworks/volley/
2. (from volley project) Build -> Make Project => build/outputs/aar/volley-debug.aar
3. mvn install:install-file -Dfile=volley-debug.aar -DgroupId=com.android.volley -DartifactId=volley -Dversion=1.0.0 -Dpackaging=aar
4. add to dependencies: compile( 'com.android.volley:volley:1.0.0' )

adb shell setprop log.tag.Volley VERBOSE


SLIPWIRE:
1. build.gradle(Project: slipwire) (buildscript and allprojects repositories)
    maven { url 'D:/gubo/dev/mvn/gubo.local.repo' }


MOBILE:
1. File -> Project Structure Modules mobile : add module dependency for slipwire
   ( build.gradle (Module: mobile) compile project(':slipwire') )


TV:
1. File -> Project Structure Modules tv : add module dependency for slipwire
   ( build.gradle (Module: tv) compile project(':slipwire') )


RETROFIT:
1. retrofit has some proguard considerations (http://square.github.io/retrofit/): proguard-rules.pro
    -dontwarn retrofit.**
    -keep class retrofit.** { *; }
    -keepattributes Signature
    -keepattributes Exceptions

GIT:
1. if android studio loses git association:
    VCS -> Enable version Control Integration -> Git
    TERMINAL:
    git remote add slipwire https://github.com/gubo/slipwire.git


MISC LINKS:

http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html

http://developer.android.com/training/volley/index.html
https://developer.android.com/training/material/lists-cards.html

http://code.hootsuite.com/observing-observables-in-mobile-rxjava-for-android/
https://kmangutov.wordpress.com/2015/03/28/android-mvp-consuming-restful-apis/

// infinite scrolling list rxandroid and recyclerview (except not really infinite because keeps a growing list of backing data array):
https://gist.github.com/dustin-graham/52eaaab1cb3a41aba444

https://github.com/ReactiveX/RxJava
http://reactivex.io/RxJava/javadoc/
http://square.github.io/retrofit/javadoc/index.html
https://github.com/kaushikgopal/RxJava-Android-Samples
https://speakerdeck.com/jakewharton/2014-1
http://blog.danlew.net/2014/10/08/grokking-rxjava-part-4/
http://reactivex.io/tutorials.html
http://www.philosophicalhacker.com/2015/06/12/an-introduction-to-rxjava-for-android/
https://github.com/zsiegel/rx-mvp-android

http://fahimk.github.io/2015/04/21/using-rxjava-with-mvp-to-handle-configuration-changes/

http://www.integratingstuff.com/2011/10/24/adding-a-webserver-to-an-android-app/

https://github.com/jetty-project/i-jetty

https://maven.apache.org/run.html
http://mvnrepository.com/artifact/org.eclipse.jetty

http://puregeekjoy.blogspot.com/2011/06/running-embedded-jetty-in-android-app.html
http://wiki.eclipse.org/Jetty/Tutorial/Embedding_Jetty#Writing_Handlers
http://www.eclipse.org/jetty/documentation/current/
http://wiki.eclipse.org/Jetty/Tutorial/Embedding_Jetty#Writing_Handlers
http://download.eclipse.org/jetty/stable-9/apidocs/

http://nanohttpd.org/index.html
https://github.com/NanoHttpd/nanohttpd
https://github.com/NanoHttpd/nanohttpd/blob/master/nanolets/src/test/java/fi/iki/elonen/router/AppNanolets.java
https://github.com/NanoHttpd/nanohttpd